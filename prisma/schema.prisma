// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id              Int      @id @default(autoincrement()) @unique 
  username        String
  lastname        String
  email           String   @unique
  password        String
  recipes         Recipe[]
  comments        Comment[]
  saved_recipes   SavedRecipe[]
  likes           RecipeLike[]
  createdAt       DateTime @default(now()) @map(name: "created_at")
  // set the name of the table
  @@map(name: "users")
}

model Recipe {
  id           Int      @id @default(autoincrement()) @unique
  title        String
  description  String
  picture      String
  foodInfo     Json[]
  cousine_type String
  meal_type    String
  level        String
  category     String
  comments     Comment[]
  savedRecipes SavedRecipe[]  
  likes        RecipeLike[] 
  total_likes  Int @default(0)
  created_at   DateTime @default(now())
  author       User @relation(fields: [authorId], references: [id])
  authorId     Int
  // set the name of the table
  @@map(name: "recipes")
}


model Comment {
  id           Int      @id @default(autoincrement()) @unique
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  recipe       Recipe   @relation(fields: [recipeId], references: [id])
  recipeId     Int
  comment_text String
  created_at   DateTime @default(now())

  @@map(name: "comments")
}

model SavedRecipe {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int

  @@id([userId, recipeId])
  
}

model RecipeLike {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int

  @@id([userId, recipeId])
}